name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          timeout: 60m
          command_timeout: 30m
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/2-Docthru-team1-BE

            # 메모리 정리
            sudo sync && sudo sysctl -w vm.drop_caches=3
            free -m

            # 모든 관련 프로세스 강제 종료
            for pid in $(pgrep -f "tsx.*src/app.ts"); do
              echo "프로세스 강제 종료: $pid"
              kill -9 $pid || true
            done

            if [ -f ./server.pid ]; then
              pid=$(cat ./server.pid)
              kill -9 $pid 2>/dev/null || true
              rm -f ./server.pid
            fi

            # 프로세스 종료 확인
            sleep 10
            if pgrep -f "tsx.*src/app.ts" > /dev/null; then
              echo "남은 프로세스 강제 종료"
              pkill -9 -f "tsx.*src/app.ts" || true
            fi

            # Git 작업
            git fetch origin main
            git reset --hard origin/main

            # Node 프로세스 정리
            rm -rf node_modules package-lock.json
            npm cache clean --force

            # 의존성 설치
            NODE_OPTIONS="--max-old-space-size=384" npm install

            # 환경 설정
            source /etc/profile.d/HanCook-env.sh
            export NODE_ENV=production
            export DATABASE_URL="$DATABASE_URL"

            # Prisma 작업
            npx prisma generate
            npx prisma migrate deploy
            npx prisma db seed

            # 서버 실행 준비
            echo "" > app.log
            sudo touch /etc/authbind/byport/80 /etc/authbind/byport/443
            sudo chmod 777 /etc/authbind/byport/80 /etc/authbind/byport/443

            # 서버 실행
            NODE_OPTIONS="--max-old-space-size=384" nohup authbind --deep npm run dev > app.log 2>&1 &
            new_pid=$!
            echo $new_pid > ./server.pid

            # 서버 시작 확인
            for i in {1..6}; do
              if ps -p $new_pid > /dev/null; then
                echo "서버 시작 성공 (PID: $new_pid)"
                free -m
                ps aux | grep node
                exit 0
              fi
              echo "서버 시작 대기 중... ($i/6)"
              sleep 5
            done

            echo "서버 시작 실패. 로그:"
            tail -n 50 app.log
            exit 1
