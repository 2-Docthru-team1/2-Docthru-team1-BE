name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          timeout: 60m
          command_timeout: 30m
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/2-Docthru-team1-BE

            # 시스템 정리
            sudo systemctl stop nginx || true
            sudo systemctl stop mysql || true

            # 메모리 캐시 정리
            sudo sync && sudo sysctl -w vm.drop_caches=3
            free -m

            # 기존 프로세스 정리
            if [ -f ./server.pid ]; then
              pid=$(cat ./server.pid)
              kill -15 $pid 2>/dev/null || true
              sleep 3
              kill -9 $pid 2>/dev/null || true
              rm -f ./server.pid
            fi
            pkill -f "tsx.*src/app.ts" || true
            sleep 3

            # Git 작업
            git fetch origin main
            git reset --hard origin/main

            # 의존성 설치
            rm -rf node_modules
            npm cache clean --force
            NODE_OPTIONS="--max-old-space-size=512" npm install

            # 환경 설정
            source /etc/profile.d/HanCook-env.sh
            export NODE_ENV=production
            export DATABASE_URL="$DATABASE_URL"

            # Prisma 작업
            npx prisma generate
            npx prisma migrate deploy
            npx prisma db seed

            # 서버 실행
            echo "" > app.log
            sudo touch /etc/authbind/byport/80 /etc/authbind/byport/443
            sudo chmod 777 /etc/authbind/byport/80 /etc/authbind/byport/443

            NODE_OPTIONS="--max-old-space-size=512" nohup authbind --deep npm run dev > app.log 2>&1 &
            pid=$!
            echo $pid > ./server.pid

            # 서비스 재시작
            sudo systemctl start mysql || true
            sudo systemctl start nginx || true

            # 프로세스 확인
            sleep 10
            if ps -p $pid > /dev/null; then
              echo "서버 시작 성공 (PID: $pid)"
              free -m
              exit 0
            else
              echo "서버 시작 실패. 로그:"
              tail -n 50 app.log
              exit 1
            fi
