name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          timeout: 60m
          command_timeout: 30m
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/2-Docthru-team1-BE

            # 시스템 메모리 정리
            sudo sync && sudo sysctl -w vm.drop_caches=3
            sudo swapoff -a && sudo swapon -a || true

            # 불필요한 프로세스 정리
            pkill -9 node || true
            pkill -9 npm || true
            pkill -9 -f "tsx.*src/app.ts" || true

            if [ -f ./server.pid ]; then
              pid=$(cat ./server.pid)
              kill -9 $pid 2>/dev/null || true
              rm -f ./server.pid
            fi

            sleep 5
            free -m

            # Git 작업
            git fetch origin main
            git reset --hard origin/main

            # Node 프로세스 정리
            rm -rf node_modules package-lock.json dist
            npm cache clean --force

            # 메모리 상태 확인
            echo "의존성 설치 전 메모리 상태:"
            free -m

            # 의존성 설치 (분할 실행)
            NODE_ENV=production NODE_OPTIONS="--max-old-space-size=128" npm install --production --no-optional --no-audit

            # Prisma 작업 (분할 실행)
            echo "Prisma 생성 시작..."
            NODE_OPTIONS="--max-old-space-size=128" npx prisma generate
            sleep 3

            echo "Prisma 마이그레이션 시작..."
            NODE_OPTIONS="--max-old-space-size=128" npx prisma migrate deploy
            sleep 3

            echo "Prisma 시딩 시작..."
            NODE_OPTIONS="--max-old-space-size=128" npx prisma db seed
            sleep 3

            # 서버 실행 준비
            echo "" > app.log
            sudo touch /etc/authbind/byport/80 /etc/authbind/byport/443
            sudo chmod 777 /etc/authbind/byport/80 /etc/authbind/byport/443

            echo "서버 시작 전 메모리 상태:"
            free -m

            # 서버 실행
            NODE_OPTIONS="--gc-interval=100 --max-old-space-size=128" nohup authbind --deep npm run dev > app.log 2>&1 &
            new_pid=$!
            echo $new_pid > ./server.pid

            # 서버 시작 확인
            for i in {1..12}; do
              if ps -p $new_pid > /dev/null; then
                echo "서버 시작 성공 (PID: $new_pid)"
                free -m
                ps aux | grep node
                exit 0
              fi
              echo "서버 시작 대기 중... ($i/12)"
              sleep 5
            done

            echo "서버 시작 실패. 로그:"
            tail -n 50 app.log
            exit 1
