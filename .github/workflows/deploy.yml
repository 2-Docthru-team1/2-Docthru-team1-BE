name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/2-Docthru-team1-BE
            git fetch origin main
            git reset --hard origin/main

            # 환경 변수 파일 로드
            source /etc/profile.d/HanCook-env.sh

            # 기존 프로세스 종료
            pkill -f "tsx.*src/app.ts" || true
            sleep 2

            npm install
            export DATABASE_URL="$DATABASE_URL" && npx prisma migrate dev

            # authbind 설정
            sudo touch /etc/authbind/byport/80 /etc/authbind/byport/443
            sudo chmod 777 /etc/authbind/byport/80 /etc/authbind/byport/443

            # 환경 변수와 함께 서버 실행
            export NODE_ENV=production
            cd ~/2-Docthru-team1-BE
            authbind --deep npm run dev > app.log 2>&1 &

            # PID 파일 생성
            echo $! > ./server.pid

            # 서버 시작 확인
            COUNTER=0
            while [ $COUNTER -lt 30 ]; do
                if pgrep -f "tsx.*src/app.ts" > /dev/null; then
                    echo "Server started successfully with PID $(cat ./server.pid)"
                    ps aux | grep "tsx.*src/app.ts" | grep -v grep
                    exit 0
                fi
                echo "Attempt $((COUNTER + 1))/30: Waiting for server to start..."
                sleep 2
                COUNTER=$((COUNTER + 1))
            done

            echo "Server failed to start. Last 50 lines of log:"
            tail -n 50 app.log
            exit 1

            # 프로세스 상태 최종 확인
            if ps -p $(cat ./server.pid) > /dev/null; then
                echo "Server is running with PID $(cat ./server.pid)"
                exit 0
            else
                echo "Server failed to start"
                exit 1
            fi
