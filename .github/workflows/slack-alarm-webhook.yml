name: Slack Alarm Webhook

on:
  pull_request:
    types: [review_requested, synchronize]
  pull_request_review:
    types: [submitted]
  pull_request_review_comment:
    types: [created]
  repository_dispatch:
    types: [pr_review_request]
jobs:
  mention_notification:
    name: Mention Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install yaml

      - name: Read Slack mapping
        id: slack-mapping
        run: |
          MAPPING=$(cat .github/mention-to-slack.yml)
          echo "mapping<<EOF" >> $GITHUB_OUTPUT
          echo "$MAPPING" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - uses: actions/github-script@v6
        with:
          script: |
            const yaml = require('yaml');
            const fs = require('fs');

            // Îß§Ìïë ÌååÏùº ÏùΩÍ∏∞
            const mappingFile = fs.readFileSync('.github/mention-to-slack.yml', 'utf8');
            const mapping = yaml.parse(mappingFile);

            // PR ÏûëÏÑ±ÏûêÏùò Slack ID Î≥ÄÌôò
            const prAuthor = context.payload.client_payload.pr_author;
            const authorSlackId = mapping[prAuthor] || prAuthor;
            const formattedAuthor = authorSlackId.startsWith('<@') ? authorSlackId : `<@${authorSlackId}>`;

            // Î¶¨Î∑∞Ïñ¥Îì§Ïùò Slack ID Î≥ÄÌôò
            const reviewers = context.payload.client_payload.reviewers.reviewers;
            const slackReviewers = reviewers
              .map(reviewer => mapping[reviewer] || reviewer)
              .map(id => id.startsWith('<@') ? id : `<@${id}>`)
              .join(', ');

            const message = {
              blocks: [
                {
                  type: "header",
                  text: {
                    type: "plain_text",
                    text: "üîç ÏÉàÎ°úÏö¥ PR Î¶¨Î∑∞ ÏöîÏ≤≠",
                    emoji: true
                  }
                },
                {
                  type: "section",
                  fields: [
                    {
                      type: "mrkdwn",
                      text: `*Ï†úÎ™©:*\n${context.payload.client_payload.pr_title}`
                    },
                    {
                      type: "mrkdwn",
                      text: `*ÏûëÏÑ±Ïûê:*\n${formattedAuthor}`
                    }
                  ]
                },
                {
                  type: "section",
                  fields: [
                    {
                      type: "mrkdwn",
                      text: `*Î¶¨Î∑∞Ïñ¥:*\n${slackReviewers}`
                    }
                  ]
                },
                {
                  type: "section",
                  text: {
                    type: "mrkdwn",
                    text: `*PR ÎßÅÌÅ¨:*\n${context.payload.client_payload.pr_url}`
                  }
                }
              ]
            };

            await fetch(process.env.SLACK_WEBHOOK_URL, {
              method: 'POST',
              headers: {'Content-Type': 'application/json'},
              body: JSON.stringify(message)
            });
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
